1) Pengguna (User) 
CHECK

12–14 file

Data (3–4): user_model.dart, user_repository.dart, user_repository_supabase.dart, user_mapper.dart*
Application (4–5): user_profile_vm.dart, user_auth_vm.dart (jika handle login/profile), user_state.dart*, user_usecases.dart*
Presentation (3–4): user_profile_screen.dart, user_form_screen.dart*, widgets/user_avatar.dart*
Routing (1): user_routes.dart


Catatan: kalau autentikasi pakai Supabase Auth UI, beberapa screen bisa dipangkas.

2) Alamat (Address) 
CHECK  

9–11 file (lebih sederhana)

Data (3): address_model.dart, address_repository.dart, address_repository_supabase.dart
Application (3–4): address_list_vm.dart, address_form_vm.dart, address_state.dart*
Presentation (2–3): address_list_screen.dart, address_form_screen.dart, widgets/address_tile.dart*
Routing (1): address_routes.dart

3) Merchant
CHECK 

12–16 file (fitur penuh)

Data (4–5): merchant_model.dart, merchant_repository.dart, merchant_repository_supabase.dart, merchant_mapper.dart*, merchant_realtime_source.dart*
Application (4–5): merchant_list_vm.dart, merchant_detail_vm.dart, merchant_form_vm.dart, merchant_filters.dart*, merchant_state.dart*
Presentation (3–4): merchant_list_screen.dart, merchant_detail_screen.dart, merchant_form_screen.dart, widgets/merchant_card.dart* // STOPPED
Routing (1): merchant_routes.dart


CATALOG
4) Kategori
CHECK

10–12 file

Data (3–4): category_model.dart, category_repository.dart, category_repository_supabase.dart, category_mapper.dart*
Application (3–4): category_list_vm.dart, category_form_vm.dart, category_state.dart*
Presentation (3–4): category_list_screen.dart, category_form_screen.dart, widgets/category_chip.dart* // 
Routing (1): category_routes.dart

5) Produk (Product)
CHECK: isinya
14–18 file (paling ramai)

Data (4–5): product_model.dart, product_repository.dart, product_repository_supabase.dart, product_mapper.dart*, product_realtime_source.dart*
Application (5–6): product_list_vm.dart, product_detail_vm.dart, product_form_vm.dart, product_filters.dart*, product_state.dart*, product_usecases.dart*
Presentation (4–5): product_list_screen.dart, product_detail_screen.dart, product_form_screen.dart, widgets/product_tile.dart, widgets/product_form_fields.dart
Routing (1): product_routes.dart

6) GambarProduk (ProductImage) (subfitur Produk)
CHECK gpt ulang: 1. jika dipisah maka bagaimana untuk alokasi file nya? berikan contohnya
produk/data
- produk_image_model.dart
- produk_image_mapper.dart
- produk_image_repository_supabase.dart

produk/application
- produk_image_vm.dart

Digabung: file tambahan cukup data/product_image_model.dart, application/product_image_vm.dart*, widgets/product_image_uploader.dart.Dipisah penuh (jika ada galeri & moderasi): tambah image_list_screen.dart, image_repository[_supabase].dart, dsb.

7) Review
IMPROVE: nanti aja developnya
10–12 file

Data (3–4): review_model.dart, review_repository.dart, review_repository_supabase.dart, review_mapper.dart*
Application (3–4): review_list_vm.dart (by product), review_form_vm.dart, review_state.dart*
Presentation (3–4): widgets/review_tile.dart, review_list_screen.dart*, review_form_sheet.dart

// BUG: 2. perbandingan antara perlu routing, dengan embe  di product detail
Routing (0–1): seringnya tanpa route sendiri (embed di Product Detail). Jika perlu: review_routes.dart  


COMMERCE
8) Pemesanan (Order)
TODO 
14–18 file

Data (4–5): order_model.dart, order_repository.dart, order_repository_supabase.dart, order_mapper.dart*, order_realtime_source.dart*
Application (5–6): order_list_vm.dart, order_detail_vm.dart, order_state.dart*, order_filters.dart*, order_usecases.dart* (mis. PlaceOrder, CancelOrder)
Presentation (4–5): order_list_screen.dart, order_detail_screen.dart, widgets/order_card.dart, dialogs/cancel_order_dialog.dart*
Routing (1): order_routes.dart

9) OrderItem (subfitur Order)
TODO 
Biasanya digabung ke Order. Jika dipisah: 6–8 file
Data (2–3): order_item_model.dart, order_item_mapper.dart*, (repo sering tidak perlu terpisah; CRUD via order_repository sebagai embedded list)
Application (2–3): order_item_vm.dart* (untuk add/remove dalam form/checkout)
Presentation (2): widgets/order_item_tile.dart, widgets/order_item_editor.dart
Routing (0): tidak perlu

10) Pembayaran (Payment)
TODO 
10–14 file (tergantung integrasi gateway)

Data (3–4): payment_model.dart, payment_repository.dart, payment_repository_supabase.dart (atau service ke gateway), payment_mapper.dart*
Application (4–5): payment_vm.dart (initiate/verify), payment_state.dart*, payment_usecases.dart*
Presentation (2–4): payment_screen.dart* (jika flow terpisah), widgets/payment_status_badge.dart, widgets/payment_method_selector.dart*
Routing (0–1): payment_routes.dart* kalau halamannya dedicated